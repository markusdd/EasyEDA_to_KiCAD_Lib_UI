[package]
name = "easyeda_to_kicad_lib_ui"
version = "1.3.4"
authors = ["Markus Krause <Krause.Markus@gmx.com>"]
edition = "2021"
rust-version = "1.82"


[dependencies]
egui = "0.30.0"
eframe = { version = "0.30.0", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "x11",           # for Linux
    "wayland",       # for Linux
] }
egui-dropdown = "0.12.0"
image = { version = "0.25.5", features = ["jpeg", "png"] }
egui_extras = { version = "0.30.0", features = ["all_loaders"] }
log = "0.4.22"
reqwest = { version = "0.12.11", features = ["blocking"] }
urlencoding = "2.1.3"
subprocess = "0.2.9"
serde_json = "1.0.134"
regex = "1.11.1"
indexmap = "2.7.0"
downloader = "0.2.8"
tempfile = "3.14.0"
glob = "0.3.2"
arboard = "3.4.1"


# You only need serde if you want app persistence:
serde = { version = "1.0.217", features = ["derive"] }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11.6"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4.49"


# [profile.release]
# opt-level = 2 # fast and small wasm

[profile.release]
opt-level = 3     # Optimize for speed without exploding size
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduce number of codegen units to increase optimizations.
panic = 'abort'   # Abort on panic
strip = true      # Strip symbols from binary*

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
